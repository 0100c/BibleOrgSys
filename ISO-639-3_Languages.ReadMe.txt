# ISO-639-9.ReadMe.txt
#   ReadMe.txt for ISO 639-3 language codes
#   Version 0.80
#   Last modified: 2011-02-02
#
#
# Abbreviations:
#   XML = eXtensible Markup Language -- see http://en.wikipedia.org/wiki/XML
#   DTD = Document Type Definition -- see http://en.wikipedia.org/wiki/Document_Type_Definition
#   RNG = Relax NG schema (REgular LAnguage for XML Next Generation) -- see http://en.wikipedia.org/wiki/RELAX_NG
#   RNC = RNG compact syntax -- see http://en.wikipedia.org/wiki/RELAX_NG#Compact_syntax
#
#   ISO = International Organization for Standardization -- see http://www.iso.org
#   SIL = SIL International -- see http://sil.org
#
#
# According to http://www.sil.org/iso639-3/
#   ISO 639-3 is a code that aims to define three-letter identifiers for all known human languages. At the core of ISO 639-3 are the individual languages already accounted for in ISO 639-2.
#   The large number of living languages in the initial inventory of ISO 639-3 beyond those already included in ISO 639-2 was derived primarily from Ethnologue (15th edition).
#   Additional extinct, ancient, historic, and constructed languages have been obtained from Linguist List.
#
#   SIL International has been designated as the ISO 639-3/RA for the purpose of processing requests for alpha-3 language codes comprising the International Standard,
#   Codes for the representation of names of languages - Part 3: Alpha-3 code for comprehensive coverage of languages.
#   The ISO 639-3/RA receives and reviews applications for requesting new language codes and for the change of existing ones according to criteria indicated in the standard.
#   It maintains an accurate list of information associated with registered language codes which can be viewed on or downloaded from this website, and processes updates of registered language codes.
#   Notification of pending and adopted updates are also distributed on a regular basis to subscribers and other parties.
#
#
# Enclosed are four files:
#
#   DataFiles/iso_639_3.xml
#       A UTF-8 XML file encoding ISO 639-3 language codes.
#       The file also includes an internal DTD. To validate the XML on Linux systems, use
#           xmllint --noout --valid DataFiles/iso_639_3.xml
#               (If it gives no output or error messages, then it has validated.)
#
#   DataFiles/iso_639_3.rnc
#       A Relax NG Compact Syntax schema file
#       On Linux, to convert to RNG, use
#           trang DataFiles/iso_639_3.rnc DerivedFiles/iso_639_3.rng
#       On Linux, to validate against the .rng file, use
#           xmllint --noout --relaxng DerivedFiles/iso_639_3.rng DataFiles/iso_639_3.xml
#       or to validate against both this and the internal DTD, use
#           xmllint --noout --relaxng DerivedFiles/iso_639_3.rng --valid DataFiles/iso_639_3.xml
#
#   ISO_639_3_Languages.py (for Python 3)
#       This small program will load and do some very basic checking of the XML data file.
#           It contains two classes -- the Converter class is not intended to be used by most end-user programs.
#       It can be used in a larger Python program to load the XML data into two Python dictionaries (with different fields as the key).
#       It can also be used to convert and export the XML data directly to Python or C code which can be included in another program as well as JSON format
#           (if you don't want to have to supply or validate the master XML file).
#       It is expected that the user might want to modify the Python code in order to customize it to your particular needs for either of the above strategies.
#       The program is open source with a GPL-3.0 licence.
#       If you have Python3 installed on Linux, run the program with ./ISO_639_3_Languages.py --help (once you have made the program file "executable").
#               (Alternatively, try: python3 ISO_639_3_Languages.py --help)
#       To export the data in other formats, use --export (instead of --help).
#           This should load and check the XML file and create ISO_639_3_Languages_Tables.* files in the DerivedFiles folder, suitable for including in other programs.
#       If the program is run without any additional parameters, it runs in a demo mode which should show the use of some of the available routines.
#
#   Tests/ISO_639_3_LanguagesTest.py (for Python 3)
#       Running this program from the command line will automatically run tests on the above module, listing tests which fail.
#           A result of OK indicates that the tests have all passed.
#       If you have Python3 installed on Linux, run the program with Tests/ISO_639_3_LanguagesTest.py --help (once you have made the program file "executable").
#               (Alternatively, try: python3 Tests/ISO_639_3_LanguagesTest.py --help)
#       Normally, running the program with Tests/ISO_639_3_LanguagesTest.py should do everything you need.
#
#
# Robert Hunt
# Hunt.Robert@gmail.com
# October 2010--February 2011.
